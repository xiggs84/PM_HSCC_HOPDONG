package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CauHinhHopDongAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCauHinhHopDongAllPropertiesEquals(CauHinhHopDong expected, CauHinhHopDong actual) {
        assertCauHinhHopDongAutoGeneratedPropertiesEquals(expected, actual);
        assertCauHinhHopDongAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCauHinhHopDongAllUpdatablePropertiesEquals(CauHinhHopDong expected, CauHinhHopDong actual) {
        assertCauHinhHopDongUpdatableFieldsEquals(expected, actual);
        assertCauHinhHopDongUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCauHinhHopDongAutoGeneratedPropertiesEquals(CauHinhHopDong expected, CauHinhHopDong actual) {
        assertThat(expected)
            .as("Verify CauHinhHopDong auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCauHinhHopDongUpdatableFieldsEquals(CauHinhHopDong expected, CauHinhHopDong actual) {
        assertThat(expected)
            .as("Verify CauHinhHopDong relevant properties")
            .satisfies(e -> assertThat(e.getIdLoaiHopDong()).as("check idLoaiHopDong").isEqualTo(actual.getIdLoaiHopDong()))
            .satisfies(e -> assertThat(e.getIdDonVi()).as("check idDonVi").isEqualTo(actual.getIdDonVi()))
            .satisfies(e -> assertThat(e.getChieuDai()).as("check chieuDai").isEqualTo(actual.getChieuDai()))
            .satisfies(e -> assertThat(e.getTienTo()).as("check tienTo").isEqualTo(actual.getTienTo()))
            .satisfies(e -> assertThat(e.getGiaTri()).as("check giaTri").isEqualTo(actual.getGiaTri()))
            .satisfies(e -> assertThat(e.getHienThi()).as("check hienThi").isEqualTo(actual.getHienThi()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCauHinhHopDongUpdatableRelationshipsEquals(CauHinhHopDong expected, CauHinhHopDong actual) {}
}
