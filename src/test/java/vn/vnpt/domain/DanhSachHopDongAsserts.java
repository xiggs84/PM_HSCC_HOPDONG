package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DanhSachHopDongAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDanhSachHopDongAllPropertiesEquals(DanhSachHopDong expected, DanhSachHopDong actual) {
        assertDanhSachHopDongAutoGeneratedPropertiesEquals(expected, actual);
        assertDanhSachHopDongAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDanhSachHopDongAllUpdatablePropertiesEquals(DanhSachHopDong expected, DanhSachHopDong actual) {
        assertDanhSachHopDongUpdatableFieldsEquals(expected, actual);
        assertDanhSachHopDongUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDanhSachHopDongAutoGeneratedPropertiesEquals(DanhSachHopDong expected, DanhSachHopDong actual) {
        assertThat(expected)
            .as("Verify DanhSachHopDong auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDanhSachHopDongUpdatableFieldsEquals(DanhSachHopDong expected, DanhSachHopDong actual) {
        assertThat(expected)
            .as("Verify DanhSachHopDong relevant properties")
            .satisfies(e -> assertThat(e.getNgayLapHd()).as("check ngayLapHd").isEqualTo(actual.getNgayLapHd()))
            .satisfies(e -> assertThat(e.getNguoiLapHd()).as("check nguoiLapHd").isEqualTo(actual.getNguoiLapHd()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()))
            .satisfies(e -> assertThat(e.getIdLoaiHd()).as("check idLoaiHd").isEqualTo(actual.getIdLoaiHd()))
            .satisfies(e -> assertThat(e.getIdDonVi()).as("check idDonVi").isEqualTo(actual.getIdDonVi()))
            .satisfies(e -> assertThat(e.getNgayThaoTac()).as("check ngayThaoTac").isEqualTo(actual.getNgayThaoTac()))
            .satisfies(e -> assertThat(e.getNguoiThaoTac()).as("check nguoiThaoTac").isEqualTo(actual.getNguoiThaoTac()))
            .satisfies(e -> assertThat(e.getSrcHopDong()).as("check srcHopDong").isEqualTo(actual.getSrcHopDong()))
            .satisfies(e -> assertThat(e.getSoCongChung()).as("check soCongChung").isEqualTo(actual.getSoCongChung()))
            .satisfies(e -> assertThat(e.getCongChungVien()).as("check congChungVien").isEqualTo(actual.getCongChungVien()))
            .satisfies(e -> assertThat(e.getSoTienRutTrich()).as("check soTienRutTrich").isEqualTo(actual.getSoTienRutTrich()))
            .satisfies(e -> assertThat(e.getHdThuCong()).as("check hdThuCong").isEqualTo(actual.getHdThuCong()))
            .satisfies(e -> assertThat(e.getTrangThaiRutTrich()).as("check trangThaiRutTrich").isEqualTo(actual.getTrangThaiRutTrich()))
            .satisfies(e -> assertThat(e.getChuKyNgoaiTruSo()).as("check chuKyNgoaiTruSo").isEqualTo(actual.getChuKyNgoaiTruSo()))
            .satisfies(e -> assertThat(e.getStrSearch()).as("check strSearch").isEqualTo(actual.getStrSearch()))
            .satisfies(e -> assertThat(e.getNgayText()).as("check ngayText").isEqualTo(actual.getNgayText()))
            .satisfies(e -> assertThat(e.getNgayRutTrichText()).as("check ngayRutTrichText").isEqualTo(actual.getNgayRutTrichText()))
            .satisfies(
                e -> assertThat(e.getNgayThaoTacRutTrich()).as("check ngayThaoTacRutTrich").isEqualTo(actual.getNgayThaoTacRutTrich())
            )
            .satisfies(e -> assertThat(e.getThuLaoCongChung()).as("check thuLaoCongChung").isEqualTo(actual.getThuLaoCongChung()))
            .satisfies(e -> assertThat(e.getQuyenLaiSt()).as("check quyenLaiSt").isEqualTo(actual.getQuyenLaiSt()))
            .satisfies(e -> assertThat(e.getSoLaiSt()).as("check soLaiSt").isEqualTo(actual.getSoLaiSt()))
            .satisfies(e -> assertThat(e.getQuyenLaiTl()).as("check quyenLaiTl").isEqualTo(actual.getQuyenLaiTl()))
            .satisfies(e -> assertThat(e.getSoLaiTl()).as("check soLaiTl").isEqualTo(actual.getSoLaiTl()))
            .satisfies(e -> assertThat(e.getSrcKySoPdf()).as("check srcKySoPdf").isEqualTo(actual.getSrcKySoPdf()))
            .satisfies(e -> assertThat(e.getSrcKySoPdfSigned()).as("check srcKySoPdfSigned").isEqualTo(actual.getSrcKySoPdfSigned()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDanhSachHopDongUpdatableRelationshipsEquals(DanhSachHopDong expected, DanhSachHopDong actual) {}
}
