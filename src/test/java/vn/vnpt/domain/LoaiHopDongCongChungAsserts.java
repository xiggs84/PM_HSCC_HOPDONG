package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoaiHopDongCongChungAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoaiHopDongCongChungAllPropertiesEquals(LoaiHopDongCongChung expected, LoaiHopDongCongChung actual) {
        assertLoaiHopDongCongChungAutoGeneratedPropertiesEquals(expected, actual);
        assertLoaiHopDongCongChungAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoaiHopDongCongChungAllUpdatablePropertiesEquals(LoaiHopDongCongChung expected, LoaiHopDongCongChung actual) {
        assertLoaiHopDongCongChungUpdatableFieldsEquals(expected, actual);
        assertLoaiHopDongCongChungUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoaiHopDongCongChungAutoGeneratedPropertiesEquals(LoaiHopDongCongChung expected, LoaiHopDongCongChung actual) {
        assertThat(expected)
            .as("Verify LoaiHopDongCongChung auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoaiHopDongCongChungUpdatableFieldsEquals(LoaiHopDongCongChung expected, LoaiHopDongCongChung actual) {
        assertThat(expected)
            .as("Verify LoaiHopDongCongChung relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getIdLoaiHopDongCongChung())
                        .as("check idLoaiHopDongCongChung")
                        .isEqualTo(actual.getIdLoaiHopDongCongChung())
            )
            .satisfies(e -> assertThat(e.getDienGiai()).as("check dienGiai").isEqualTo(actual.getDienGiai()))
            .satisfies(e -> assertThat(e.getGiaTri()).as("check giaTri").isEqualTo(actual.getGiaTri()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoaiHopDongCongChungUpdatableRelationshipsEquals(LoaiHopDongCongChung expected, LoaiHopDongCongChung actual) {}
}
